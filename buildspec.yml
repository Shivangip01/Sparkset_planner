version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - pip install -r requirements.txt
      - yum install -y bc
  pre_build:
    commands:
      - echo "Running Pylint..."
      # Run Pylint and capture the rating in a variable
      - |
        # Run Pylint and extract the score
        PYTHON_FILES=$(find . -name "*.py")
        echo "Analyzing Python files: $PYTHON_FILES"

        pylint $PYTHON_FILES --exit-zero > pylint_report.txt

        # Extract the Pylint score robustly
        SCORE=$(pylint $PYTHON_FILES --exit-zero | grep -Eo 'Your code has been rated at [0-9]+\.[0-9]+' | grep -Eo '[0-9]+\.[0-9]+')

        echo "Pylint Score: $SCORE"

        # Set the threshold and fail if the score is below it
        THRESHOLD=3.0
        if (( $(echo "$SCORE < $THRESHOLD" | bc -l) )); then
          echo "Pylint score $SCORE is below threshold $THRESHOLD. Failing the build."
          exit 1
        else
          echo "Pylint score $SCORE meets the threshold $THRESHOLD. Build passed."
        fi



  build:
    commands:
      - echo "Cleaning up old Elastic Beanstalk versions..."
      - APP_NAME="x23188006-sparkset-planner"
      - VERSIONS_TO_KEEP=5
      - |
        aws elasticbeanstalk describe-application-versions --application-name $APP_NAME \
        --query 'ApplicationVersions[*].[VersionLabel,DateCreated]' \
        --output text | sort -k2 | head -n -$VERSIONS_TO_KEEP | awk '{print $1}' | while read version; do
          echo "Deleting version: $version"
          aws elasticbeanstalk delete-application-version --application-name $APP_NAME --version-label $version --delete-source-bundle
         done

      - ls -l 
      - pwd
      - ls
      - python manage.py collectstatic --no-input
      - python manage.py migrate
      - zip -r event-planner.zip . -x "*.git*" "*__pycache__*" "*.pyc" "*.pyo" "env/*"
artifacts:
  files:
    - "**/*"
  discard-paths: no
